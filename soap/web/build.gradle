configurations {
  jaxb
}

task genJaxb {
  ext.sourcesDir = "${buildDir}/generated/jaxb"
  ext.classesDir = "${buildDir}/classes/jaxb"
  ext.schema = "src/main/resources/BankWS.xsd"

  outputs.dir classesDir

  doLast {
    project.ant {
      taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
      mkdir(dir: sourcesDir)
      mkdir(dir: classesDir)

      xjc(destdir: sourcesDir, schema: schema) {
        arg(value: "-wsdl")
        produces(dir: sourcesDir, includes: "**/*.java")
      }

      javac(
        destdir: classesDir,
        source: 11,
        target: 11,
        debug: true,
        debugLevel: "lines,vars,source",
        includeantruntime: false,
        classpath: configurations.jaxb.asPath
      ) {
        src(path: sourcesDir)
        include(name: "**/*.java")
        include(name: "*.java")
      }

      copy(todir: classesDir) {
        fileset(dir: sourcesDir, erroronmissingdir: false) {
          exclude(name: "**/*.java")
        }
      }
    }
  }
}

dependencies {
  implementation project(':core:common')
  implementation project(':soap:business')
  implementation group: 'wsdl4j', name: 'wsdl4j'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services'

  jaxb group: 'org.glassfish.jaxb', name: 'jaxb-xjc'
  compile(files(genJaxb.classesDir).builtBy(genJaxb))
}
